#include "../libft.h"
#include <stdio.h>
#include <string.h>

int		memccpy_test(void)
{
	int tests_passed = 0;

	char c_src[11] = "an example";
	char c_dest1[10] = {'\0'};
	char c_dest2[10] = {'\0'};

	void *ret1 = ft_memccpy(c_dest1, c_src, '@', 10);
	void *ret2 = memccpy(c_dest2, c_src, '@', 10);

	if (ret1 == ret2)
		tests_passed++;
	else
		printf("\nERROR 1: ret1 != NULL\n");
	if (memcmp(c_dest1, c_dest2, 10) == 0)
		tests_passed++;
	else
		printf("\nERROR 2: memcmp(c_dest1, c_dest2, 10) != 0\n");
	
	ret1 = ft_memccpy(c_dest1, "find\0 null", 0, 10);
	ret2 = memccpy(c_dest2, "find\0 null", 0, 10);

	if (memcmp(ret1, ret2, 5) == 0)
		tests_passed++;
	else
		printf("\nERROR 3: memcmp(ret1, ret2, 5) != 0\n");
	if (memcmp(c_dest1, c_dest2, 10) == 0)
		tests_passed++;
	else
		printf("\nERROR 4: memcmp(c_dest1, c_dest2, 10) != 0\n");

	ret1 = ft_memccpy(c_dest1, "", 0, 0);
	ret2 = memccpy(c_dest2, "", 0, 0);

	if (ret1 == ret2)
		tests_passed++;
	else
		printf("\nERROR 5: ret1 != ret2\n");
	if (memcmp(c_dest1, c_dest2, 10) == 0)
		tests_passed++;
	else
		printf("\nERROR 6: memcmp(c_dest1, c_dest2, 10) != 0\n");

	int i_src[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
	int i_dest1[10] = {0};
	int i_dest2[10] = {0};

	ret1 = ft_memccpy(i_dest1, i_src, 127, sizeof(int)*10);
	ret2 = memccpy(i_dest2, i_src, 127, sizeof(int)*10);

	if (ret1 == NULL && ret2 == NULL)
		tests_passed++;
	else
		printf("\nERROR 7: ret1 != ret2\n%s\n%s\n", ret1, ret2);
	if (memcmp(i_dest1, i_dest2, sizeof(int)*10) == 0)
		tests_passed++;
	else
		printf("\nERROR 8: memcmp(i_dest1, i_dest2, sizeof(int)*10) != 0\n");

	if (tests_passed == 8)
	{
		printf("\tOK\n");
        return (1);
	}
    return (0);
}
/*
void	memccpy_test(void)
{
	int tests_passed = 0;
	char c_src[10] = "example";
	char c_dest1[10] = "1234567";
	char c_dest2[10] = "1234567";

	if (ft_memccpy(c_dest1, c_src, 'x', 8) == NULL)
		ft_putendl("ok");
	else
		ft_putendl(ft_memccpy(c_dest1, c_src, 'x', 8));
	ft_putendl(c_dest1);
	if (memccpy(c_dest2, c_src, 'x', 8) == NULL)
		ft_putendl("ok");
	else
		ft_putendl(memccpy(c_dest2, c_src, 'x', 8));
	ft_putendl(c_dest2);

	if (ft_memccpy(c_dest1, c_src, 'z', 8) == NULL)
		ft_putendl("ok");
	else
		ft_putendl(ft_memccpy(c_dest1, c_src, 'x', 8));
	ft_putendl(c_dest1);
	if (memccpy(c_dest2, c_src, 'z', 8) == NULL)
		ft_putendl("ok");
	else
		ft_putendl(memccpy(c_dest2, c_src, 'x', 8));
	ft_putendl(c_dest2);

	int i_src[10] = {1, 2, 3, 4, 5, 6, 7};
	int i_dest1[10] = {9, 9, 9, 9, 9, 9, 9};
	int i_dest2[10] = {9, 9, 9, 9, 9, 9, 9};
	if (ft_memccpy(i_dest1, i_src, 0, sizeof(int)*7) == NULL)
		ft_putendl("ok");
	for (int i = 0; i < 7; i++)
	{
		ft_putnbr(i_dest1[i]);
		ft_putchar('\n');
	}
	if (memccpy(i_dest2, i_src, 0, sizeof(int)*7) == NULL)
		ft_putendl("ok");
	for (int i = 0; i < 7; i++)
	{
		ft_putnbr(i_dest2[i]);
		ft_putchar('\n');
	}

	if (ft_memccpy(i_dest1, i_src, 'x', sizeof(int)*7) == NULL)
		ft_putendl("ok");
	for (int i = 0; i < 7; i++)
	{
		ft_putnbr(i_dest1[i]);
		ft_putchar('\n');
	}
	if (memccpy(i_dest2, i_src, 'x', sizeof(int)*7) == NULL)
		ft_putendl("ok");
	for (int i = 0; i < 7; i++)
	{
		ft_putnbr(i_dest2[i]);
		ft_putchar('\n');
	}
}*/
